name: Node.js

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Config git
        run: git config --global core.autocrlf input

      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore Node cache
        uses: actions/cache@v2
        with:
          path: |
            .eslintcache
            yarn.lock
            .yarnrc.yml
            .yarn
            node_modules
            */node_modules
            */*/node_modules
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}-${{ secrets.CACHE_VERSION }}

      - name: Config Yarn
        run: |
          yarn set version berry
          yarn --version
          yarn set version from sources
          yarn --version
          yarn config set enableImmutableInstalls false
          yarn config set pnpFallbackMode all
          yarn config set pnpMode loose
        if: hashFiles('.yarnrc.yml') == ''

      - name: Install dependencies
        run: |
          yarn

      - name: Build
        run: |
          pushd internal/rollup-config
          yarn build
          popd
          yarn lerna run prepublishOnly

      - name: Test
        run: |
          yarn lint
          yarn test
        shell: bash

  test-android:
    name: Android on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [15.x]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore Node cache
        uses: actions/cache@v2
        with:
          path: |
            yarn.lock
            .yarn
            node_modules
            */node_modules
            */*/node_modules
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}-${{ secrets.CACHE_VERSION }}

      - name: Config Yarn
        run: |
          yarn set version berry
          yarn set version from sources
          yarn config set enableImmutableInstalls false
          yarn config set pnpFallbackMode all
          yarn config set pnpMode loose

      - name: Restore Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: |
          echo "/usr/local/lib/android/sdk/platform-tools" >> $GITHUB_PATH
          echo "/usr/local/lib/android/sdk/tools" >> $GITHUB_PATH
          yarn
          yarn workspace '@admob-plus-internal/cli' prepack
          yarn workspace '@admob-plus-internal/rollup-config' prepack
          pushd examples/cordova
          yarn example cordova platform rm ios
          yarn prepare
          popd

      - name: Test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 28
          script: |
            cd examples/cordova
            yarn test

  test-ios:
    name: iOS on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: ['15']
        os: [macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore Node cache
        uses: actions/cache@v2
        with:
          path: |
            yarn.lock
            .yarn
            node_modules
            */node_modules
            */*/node_modules
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}-${{ secrets.CACHE_VERSION }}

      - name: Config Yarn
        run: |
          yarn set version berry
          yarn set version from sources
          yarn config set enableImmutableInstalls false
          yarn config set pnpFallbackMode all
          yarn config set pnpMode loose

      - name: Install dependencies
        run: |
          yarn
          yarn workspace '@admob-plus-internal/cli' prepack
          yarn workspace '@admob-plus-internal/rollup-config' prepack
          pushd examples/cordova
          yarn prepare
          popd

      - name: Test
        run: |
          yarn test-ios
          pushd examples/cordova
          yarn test
          popd

  link-checker:
    name: Check links
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: lycheeverse/lychee-action@v1.0.6
        with:
          args: --version
      - name: lychee Link Checker
        id: lc
        uses: lycheeverse/lychee-action@v1.0.6
        with:
          args: >
            README.md
            packages/*/README.
            website/**/*.md
            --config lychee.toml
      - name: Fail if there were link errors
        run: exit ${{ steps.lc.outputs.exit_code }}

  deploy-docs:
    name: Deploy website
    needs: [link-checker, test]
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '15.x'

      - name: Config Yarn
        run: |
          yarn set version berry
          yarn set version from sources
          yarn config set enableImmutableInstalls false
          yarn config set pnpFallbackMode all
          yarn config set pnpMode loose

      - uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY }}

      - name: Release to GitHub Pages
        run: |
          git config --global user.name "${GIT_USER}"
          git config --global user.email "${{ secrets.GH_EMAIL }}"
          pushd website
          yarn
          yarn workspace 'admob-plus-cordova' build
          yarn deploy
          popd
        env:
          GIT_USER: "${{ secrets.GH_NAME }}"
          USE_SSH: true

      - name: Archive yarn.lock
        uses: actions/upload-artifact@v2
        with:
          name: yarn.lock
          path: yarn.lock

      - uses: hkusu/status-create-action@v1
        id: status-create
        with:
          sha: ${{ github.sha }}
          state: success
      - name: Status creation result
        if: always()
        run: echo '${{ steps.status-create.outputs.result }}'
